@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Плавный скролл
   */
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Roboto Regular";
  src: url("../fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Poppins Regular";
  src: url("../fonts/Poppins-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-dark: #212121;
  --color-light: #FFFFFF;
  --color-accent: #ECD8BD;
  --border: 1px solid var(--color-light);
  --border-radius: 50px;
  --shadow: 0 5px 0 0 var(--color-dark);
  --font-family-base: "Poppins Regular", sans-serif;
  --container-width: 1580px;
  --container-padding-x: 20px;
  --section-padding-y: 70px;
  --input-height: 59px;
  --button-height: 56px;
  --transition-duration: 0.2s;
  --header-height: 90px;
}
@media (max-width: 1280px) {
  :root {
    --section-padding-y: 50px;
  }
}
@media (max-width: 767px) {
  :root {
    --section-padding-y: 30px;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(16px, 1.25vw, 18px);
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-light);
  background-color: var(--color-dark);
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2, h3, h4 {
  font-weight: 400;
  font-family: "Roboto Regular";
}

h1, .h1 {
  font-size: clamp(43px, 5.5555555556vw, 80px);
}

h2, .h2 {
  font-size: clamp(30px, 4.1666666667vw, 60px);
}

h3, .h3 {
  font-size: clamp(26px, 2.0833333333vw, 30px);
}

h4, .h4 {
  font-size: clamp(18px, 1.3888888889vw, 20px);
}

.button {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  height: var(--button-height);
  padding-inline: 35px;
  font-size: 20px;
  color: #fff;
  background-color: var(--color-dark);
  border: var(--border);
  border-radius: var(--border-radius);
}
@media (hover: hover) {
  .button:hover {
    color: var(--color-dark);
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .button:active {
    color: var(--color-dark);
    background-color: var(--color-accent);
  }
}
.button--transparent {
  color: var(--color-light);
  background-color: transparent;
}
.button--accent {
  color: var(--color-dark);
  background-color: var(--color-accent);
}
@media (hover: hover) {
  .button--accent:hover {
    color: var(--color-accent);
    background-color: var(--color-dark);
  }
}
@media (hover: none) {
  .button--accent:active {
    color: var(--color-accent);
    background-color: var(--color-dark);
  }
}

.grid {
  --gridColumns: 1;
  display: grid;
  grid-template-columns: repeat(var(--gridColumns), 1fr);
  gap: 40px;
}
@media (max-width: 767px) {
  .grid {
    gap: 30px;
  }
}
.grid--2 {
  --gridColumns: 2;
}
.grid--3 {
  --gridColumns: 3;
}
.grid--4 {
  --gridColumns: 4;
}
.grid--5 {
  --gridColumns: 5;
}
.grid--6 {
  --gridColumns: 6;
}
.grid--7 {
  --gridColumns: 7;
}
.grid--8 {
  --gridColumns: 8;
}
.grid--9 {
  --gridColumns: 9;
}
.grid--10 {
  --gridColumns: 10;
}
.grid--11 {
  --gridColumns: 11;
}
.grid--12 {
  --gridColumns: 12;
}
@media (max-width: 1023px) {
  .grid--2 {
    --gridColumns: 1;
  }
}
@media (max-width: 1280px) {
  .grid--3 {
    --gridColumns: 2;
  }
}
@media (max-width: 767px) {
  .grid--3 {
    --gridColumns: 1;
  }
}

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48px;
  aspect-ratio: 1;
  position: relative;
  border-radius: var(--border-radius);
}
@media (hover: hover) {
  .burger-button:hover {
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .burger-button:active {
    background-color: var(--color-accent);
  }
}
.burger-button::after {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  content: "";
  width: 50%;
  height: 2px;
  background-color: var(--color-accent);
  border-radius: 5px;
  box-shadow: 0 -8px var(--color-accent), 0 8px var(--color-accent);
}

.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__menu {
  font-size: 20px;
}
@media (max-width: 1280px) {
  .header__menu {
    font-size: 18px;
  }
}
@media (max-width: 1023px) {
  .header__menu {
    font-size: 16px;
  }
}
.header__menu-list {
  display: flex;
  align-items: center;
  -moz-column-gap: 80px;
       column-gap: 80px;
}
@media (max-width: 1023px) {
  .header__menu-list {
    -moz-column-gap: 50px;
         column-gap: 50px;
  }
}
.header__menu-link {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: var(--header-height);
}
@media (hover: hover) {
  .header__menu-link:hover::after {
    width: 100%;
  }
}
@media (hover: none) {
  .header__menu-link:active::after {
    width: 100%;
  }
}
.header__menu-link::after {
  content: "";
  position: absolute;
  top: 80%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: var(--color-accent);
  transition-duration: inherit;
}
.header__button {
  padding-inline: 50px;
  font-size: 20px;
}
@media (max-width: 1280px) {
  .header__button {
    font-size: 18px;
  }
}
@media (max-width: 1023px) {
  .header__button {
    font-size: 16px;
    padding-inline: 30px;
  }
}

.cross-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 48px;
  aspect-ratio: 1;
  position: relative;
  border-radius: var(--border-radius-small);
}
@media (hover: hover) {
  .cross-button:hover {
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .cross-button:active {
    background-color: var(--color-accent);
  }
}
.cross-button::before, .cross-button::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 7px;
  width: 70%;
  height: 2px;
  background-color: var(--color-accent);
  border-radius: 5px;
}
.cross-button::before {
  rotate: 45deg;
}
.cross-button::after {
  rotate: -45deg;
}

.mobile-overlay {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 14px 20px;
  border: none;
  color: var(--color-light);
  background-color: var(--color-dark);
}
.mobile-overlay:modal {
  max-width: 100%;
  max-height: 100%;
}
.mobile-overlay__close-button-wrapper {
  display: flex;
  justify-content: end;
}
.mobile-overlay__list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  row-gap: 30px;
  min-height: 80vh;
}

.section {
  padding-block: var(--section-padding-y);
}
.section--hidden-x {
  overflow-x: hidden;
}
.section__header {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 10px;
}
@media (max-width: 767px) {
  .section__header {
    flex-direction: column;
    row-gap: 30px;
    text-align: center;
  }
}
.section__header:not(:last-child) {
  margin-bottom: 80px;
}
@media (max-width: 767px) {
  .section__header:not(:last-child) {
    margin-bottom: 40px;
  }
}
.section__description {
  font-size: 20px;
  color: var(--color-accent);
}

.hero__wraper {
  display: flex;
  flex-direction: column;
  justify-content: end;
  min-height: calc(100dvh - var(--header-height));
}

.hero {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .hero {
    flex-direction: column;
    align-items: center;
    gap: 30px;
    padding-block: var(--section-padding-y);
  }
}
.hero__main {
  display: flex;
  flex-direction: column;
  gap: 30px;
  max-width: 50%;
  padding-bottom: 100px;
}
@media (max-width: 1280px) {
  .hero__main {
    justify-content: center;
    padding-bottom: var(--section-padding-y);
  }
}
@media (max-width: 767px) {
  .hero__main {
    display: contents;
  }
}
.hero__button {
  width: 200px;
}
.hero__title {
  order: -3;
}
.hero__img {
  width: 40%;
  height: auto;
  position: absolute;
  bottom: -174px;
  right: 0;
}
@media (max-width: 1280px) {
  .hero__img {
    position: initial;
  }
}
@media (max-width: 1023px) {
  .hero__img {
    width: 50%;
  }
}
@media (max-width: 767px) {
  .hero__img {
    order: -1;
  }
}
.hero__description {
  font-size: 20px;
  line-height: 1.4;
}
@media (max-width: 767px) {
  .hero__description {
    margin-bottom: 40px;
    order: -2;
  }
}
.hero__achievement {
  background-color: var(--color-accent);
  padding-block: 40px;
}
@media (max-width: 767px) {
  .hero__achievement {
    padding-block: 20px;
  }
}
.hero__achievement-list {
  color: var(--color-dark);
  font-size: 16px;
  display: flex;
  gap: 90px;
}
@media (max-width: 1280px) {
  .hero__achievement-list {
    justify-content: center;
  }
}
.hero__achievement-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  row-gap: 20px;
}

.service-card {
  height: 100%;
  background-color: var(--color-accent);
  border-radius: 30px;
  overflow: hidden;
}
.service-card__image {
  width: 100%;
}
.service-card__body {
  color: var(--color-dark);
  display: flex;
  flex-direction: column;
  row-gap: 20px;
  align-items: center;
  padding-block: 20px;
}/*# sourceMappingURL=styles.css.map */